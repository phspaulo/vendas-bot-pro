
import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Separator } from "@/components/ui/separator";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { 
  MessageCircle, 
  QrCode, 
  Download, 
  Github, 
  CheckCircle, 
  AlertCircle,
  Monitor,
  Wifi,
  HardDrive,
  Bot,
  Copy,
  ExternalLink
} from "lucide-react";
import { toast } from "sonner";

interface SetupInstructionsProps {
  businessData: any;
}

const SetupInstructions = ({ businessData }: SetupInstructionsProps) => {
  const [currentStep, setCurrentStep] = useState(1);
  
  const botCode = `const { Client, LocalAuth, MessageMedia } = require('whatsapp-web.js');
const qrcode = require('qrcode-terminal');

const client = new Client({
    authStrategy: new LocalAuth()
});

client.on('qr', (qr) => {
    qrcode.generate(qr, {small: true});
    console.log('QR Code gerado! Escaneie com seu WhatsApp.');
});

client.on('ready', () => {
    console.log('‚úÖ ${businessData?.businessName || 'Seu Chatbot'} est√° online!');
});

client.on('message', async (message) => {
    const userMessage = message.body.toLowerCase();
    const senderName = message._data.notifyName || 'Cliente';
    
    // Menu principal
    if (userMessage === 'menu' || userMessage === 'oi' || userMessage === 'ol√°' || userMessage === 'come√ßar') {
        const menuText = \`ü§ñ *Ol√° \${senderName}! Bem-vindo(a) √† ${businessData?.businessName || 'Nosso Neg√≥cio'}!*

üìã *Menu de Atendimento:*

*1* - ‚ÑπÔ∏è O que √© e como funciona
*2* - üí∞ Valor e formas de pagamento  
*3* - ‚ú® Benef√≠cios e vantagens
*4* - üöÄ Como come√ßar
*5* - ‚ùì Outras d√∫vidas

Digite o *n√∫mero* da op√ß√£o desejada!\`;
        
        await message.reply(menuText);
    }
    
    // Op√ß√£o 1 - O que √© e como funciona
    else if (userMessage === '1') {
        const responseText = \`üìã *O que √© e como funciona:*

üè™ Somos uma **${businessData?.segment || 'empresa'}** localizada em:
üìç ${businessData?.address || 'Nosso endere√ßo'}

üíº *Nossos servi√ßos incluem:*
‚Ä¢ Atendimento especializado
‚Ä¢ Produtos/servi√ßos de qualidade
‚Ä¢ Entrega r√°pida e eficiente
‚Ä¢ Suporte completo ao cliente

üïí *Hor√°rio de funcionamento:*
Segunda a Sexta: 8h √†s 18h
S√°bado: 8h √†s 14h

Digite *menu* para voltar ao in√≠cio!\`;
        
        await message.reply(responseText);
    }
    
    // Op√ß√£o 2 - Valor e pagamento
    else if (userMessage === '2') {
        const responseText = \`üí∞ *Valores e Formas de Pagamento:*

üí≥ *Aceitamos:*
‚Ä¢ Dinheiro
‚Ä¢ PIX (com desconto!)
‚Ä¢ Cart√£o de d√©bito/cr√©dito
‚Ä¢ Transfer√™ncia banc√°ria

üéØ *Promo√ß√µes especiais:*
‚Ä¢ 10% de desconto no PIX
‚Ä¢ Parcelamento em at√© 3x sem juros
‚Ä¢ Desconto para clientes fi√©is

üìû Para or√ßamentos personalizados:
WhatsApp: ${businessData?.whatsapp || '(11) 99999-9999'}

Digite *menu* para voltar ao in√≠cio!\`;
        
        await message.reply(responseText);
    }
    
    // Op√ß√£o 3 - Benef√≠cios
    else if (userMessage === '3') {
        const responseText = \`‚ú® *Benef√≠cios e Vantagens:*

üèÜ *Por que escolher a ${businessData?.businessName || 'nossa empresa'}:*

‚≠ê Qualidade garantida
‚ö° Atendimento r√°pido
üîí Seguran√ßa e confian√ßa  
üíØ Satisfa√ß√£o garantida
üéÅ Programas de fidelidade
üì± Atendimento 24/7 pelo WhatsApp

üåü *Diferenciais exclusivos:*
‚Ä¢ Mais de X anos no mercado
‚Ä¢ Centenas de clientes satisfeitos
‚Ä¢ Produtos/servi√ßos certificados
‚Ä¢ Equipe especializada

Digite *menu* para voltar ao in√≠cio!\`;
        
        await message.reply(responseText);
    }
    
    // Op√ß√£o 4 - Como come√ßar
    else if (userMessage === '4') {
        const responseText = \`üöÄ *Como Come√ßar:*

üìû *√â muito f√°cil! Siga os passos:*

1Ô∏è‚É£ Entre em contato conosco
2Ô∏è‚É£ Fa√ßa seu or√ßamento gratuito
3Ô∏è‚É£ Escolha a melhor op√ß√£o
4Ô∏è‚É£ Finalize seu pedido
5Ô∏è‚É£ Receba com rapidez e qualidade!

üì± *Contatos para atendimento:*
WhatsApp: ${businessData?.whatsapp || '(11) 99999-9999'}
${businessData?.socialMediaLink ? 'üåê Instagram: ' + businessData.socialMediaLink : ''}

‚è∞ *Resposta em at√© 30 minutos!*

Digite *menu* para voltar ao in√≠cio!\`;
        
        await message.reply(responseText);
    }
    
    // Op√ß√£o 5 - Outras d√∫vidas
    else if (userMessage === '5') {
        const responseText = \`‚ùì *Outras D√∫vidas:*

ü§ù *Atendimento Personalizado*

Para d√∫vidas espec√≠ficas, sugest√µes ou atendimento personalizado, fale diretamente com nossa equipe:

üì± *WhatsApp:* ${businessData?.whatsapp || '(11) 99999-9999'}
‚è∞ *Hor√°rio:* Segunda a Sexta, 8h √†s 18h

üí¨ *Principais d√∫vidas:*
‚Ä¢ Formas de entrega
‚Ä¢ Prazos e garantias  
‚Ä¢ Produtos/servi√ßos especiais
‚Ä¢ Programas de fidelidade

‚úÖ *Resposta garantida em at√© 30 minutos!*

Digite *menu* para voltar ao in√≠cio!\`;
        
        await message.reply(responseText);
    }
    
    // Comando especial para envio do logo
    else if (userMessage === 'teste' || userMessage === 'logo') {
        if (message.hasMedia) {
            // Se j√° h√° m√≠dia, n√£o faz nada
        } else {
            try {
                // Aqui voc√™ colocaria o caminho para o logo enviado
                const media = MessageMedia.fromFilePath('./logo.jpg');
                await client.sendMessage(message.from, media, {
                    caption: \`üì∏ *Logo da ${businessData?.businessName || 'Nossa Empresa'}*\n\nEste √© nosso logo oficial! üéØ\n\nDigite *menu* para ver nossas op√ß√µes.\`
                });
            } catch (error) {
                await message.reply('Logo n√£o encontrado. Certifique-se de colocar o arquivo logo.jpg na pasta do projeto.');
            }
        }
    }
    
    // Mensagem padr√£o para comandos n√£o reconhecidos
    else {
        const defaultText = \`ü§ñ Ol√°! N√£o entendi sua mensagem.

Digite *menu* para ver todas as op√ß√µes dispon√≠veis.

Ou escolha uma das op√ß√µes r√°pidas:
‚Ä¢ *1* - Informa√ß√µes
‚Ä¢ *2* - Pre√ßos  
‚Ä¢ *3* - Benef√≠cios
‚Ä¢ *4* - Como come√ßar
‚Ä¢ *5* - Falar com atendente\`;
        
        await message.reply(defaultText);
    }
});

client.initialize();`;

  const requirements = [
    "Computador com Windows, Mac ou Linux",
    "Conex√£o est√°vel com a internet",
    "Pelo menos 2GB de mem√≥ria RAM livre",
    "Node.js instalado (vers√£o 16 ou superior)",
    "WhatsApp instalado no celular"
  ];

  const copyCode = () => {
    navigator.clipboard.writeText(botCode);
    toast.success("C√≥digo copiado para a √°rea de transfer√™ncia!");
  };

  const downloadCode = () => {
    const element = document.createElement("a");
    const file = new Blob([botCode], { type: 'text/javascript' });
    element.href = URL.createObjectURL(file);
    element.download = `chatbot-${businessData?.businessName?.toLowerCase().replace(/\s+/g, '-') || 'personalizado'}.js`;
    document.body.appendChild(element);
    element.click();
    document.body.removeChild(element);
    toast.success("C√≥digo baixado com sucesso!");
  };

  const openWhatsApp = () => {
    const phone = businessData?.whatsapp?.replace(/\D/g, '') || '5511999999999';
    const message = `Ol√°! Acabei de adquirir o chatbot personalizado para meu neg√≥cio "${businessData?.businessName}" e gostaria de suporte para instala√ß√£o. ü§ñ`;
    const url = `https://wa.me/${phone}?text=${encodeURIComponent(message)}`;
    window.open(url, '_blank');
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 via-white to-blue-50 py-8">
      <div className="container mx-auto px-4 max-w-4xl">
        <div className="text-center mb-8">
          <div className="flex items-center justify-center mb-4">
            <CheckCircle className="w-12 h-12 text-green-500 mr-3" />
            <div>
              <h1 className="text-3xl font-bold text-green-600">Pagamento Confirmado! üéâ</h1>
              <p className="text-gray-600">Seu chatbot est√° pronto para ser configurado</p>
            </div>
          </div>
        </div>

        <Tabs defaultValue="requirements" className="space-y-6">
          <TabsList className="grid w-full grid-cols-4">
            <TabsTrigger value="requirements">Requisitos</TabsTrigger>
            <TabsTrigger value="download">Download</TabsTrigger>
            <TabsTrigger value="setup">Instala√ß√£o</TabsTrigger>
            <TabsTrigger value="support">Suporte</TabsTrigger>
          </TabsList>

          {/* Requirements Tab */}
          <TabsContent value="requirements">
            <Card className="shadow-xl border-0">
              <CardHeader>
                <CardTitle className="flex items-center">
                  <Monitor className="w-5 h-5 mr-2 text-blue-600" />
                  Requisitos do Sistema
                </CardTitle>
                <CardDescription>
                  Verifique se seu computador atende aos requisitos m√≠nimos
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="grid md:grid-cols-2 gap-6">
                  <div className="space-y-4">
                    <h3 className="font-semibold text-gray-700">‚úÖ Requisitos M√≠nimos:</h3>
                    <div className="space-y-3">
                      {requirements.map((req, index) => (
                        <div key={index} className="flex items-start">
                          <CheckCircle className="w-5 h-5 text-green-500 mr-3 mt-0.5 flex-shrink-0" />
                          <span className="text-gray-600">{req}</span>
                        </div>
                      ))}
                    </div>
                  </div>
                  
                  <div className="space-y-4">
                    <h3 className="font-semibold text-gray-700">‚ö†Ô∏è Importante:</h3>
                    <div className="space-y-3">
                      <div className="flex items-start">
                        <AlertCircle className="w-5 h-5 text-orange-500 mr-3 mt-0.5 flex-shrink-0" />
                        <span className="text-gray-600">O computador deve ficar ligado para o bot funcionar</span>
                      </div>
                      <div className="flex items-start">
                        <Wifi className="w-5 h-5 text-blue-500 mr-3 mt-0.5 flex-shrink-0" />
                        <span className="text-gray-600">Mantenha a conex√£o com internet sempre ativa</span>
                      </div>
                      <div className="flex items-start">
                        <HardDrive className="w-5 h-5 text-purple-500 mr-3 mt-0.5 flex-shrink-0" />
                        <span className="text-gray-600">Cerca de 500MB de espa√ßo livre no disco</span>
                      </div>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          {/* Download Tab */}
          <TabsContent value="download">
            <Card className="shadow-xl border-0">
              <CardHeader>
                <CardTitle className="flex items-center">
                  <Bot className="w-5 h-5 mr-2 text-green-600" />
                  Seu Chatbot Personalizado
                </CardTitle>
                <CardDescription>
                  Baixe o c√≥digo do seu chatbot j√° configurado para {businessData?.businessName}
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-6">
                <div className="bg-gray-50 border border-gray-200 rounded-xl p-4">
                  <div className="flex justify-between items-center mb-3">
                    <h4 className="font-medium text-gray-700">C√≥digo do Chatbot</h4>
                    <div className="flex space-x-2">
                      <Button onClick={copyCode} variant="outline" size="sm">
                        <Copy className="w-4 h-4 mr-1" />
                        Copiar
                      </Button>
                    </div>
                  </div>
                  <pre className="text-xs text-gray-600 bg-white p-3 rounded border max-h-60 overflow-auto">
                    {botCode.substring(0, 500)}...
                  </pre>
                </div>

                <div className="grid md:grid-cols-2 gap-4">
                  <Button onClick={downloadCode} className="bg-green-600 hover:bg-green-700" size="lg">
                    <Download className="w-5 h-5 mr-2" />
                    Baixar C√≥digo (.js)
                  </Button>
                  
                  <Button 
                    onClick={() => window.open('https://github.com', '_blank')} 
                    variant="outline" 
                    size="lg"
                  >
                    <Github className="w-5 h-5 mr-2" />
                    Salvar no GitHub
                  </Button>
                </div>

                <div className="bg-blue-50 border border-blue-200 rounded-xl p-4">
                  <h4 className="font-medium text-blue-800 mb-2">üí° Funcionalidades inclu√≠das:</h4>
                  <ul className="text-sm text-blue-700 space-y-1">
                    <li>‚Ä¢ Menu interativo com 5 op√ß√µes</li>
                    <li>‚Ä¢ Respostas personalizadas com dados do seu neg√≥cio</li>
                    <li>‚Ä¢ Envio autom√°tico do logo ao digitar "teste"</li>
                    <li>‚Ä¢ Atendimento 24/7 automatizado</li>
                    <li>‚Ä¢ Redirecionamento para atendimento humano</li>
                  </ul>
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          {/* Setup Tab */}
          <TabsContent value="setup">
            <Card className="shadow-xl border-0">
              <CardHeader>
                <CardTitle className="flex items-center">
                  <QrCode className="w-5 h-5 mr-2 text-purple-600" />
                  Instala√ß√£o Passo a Passo
                </CardTitle>
                <CardDescription>
                  Siga estas instru√ß√µes para colocar seu chatbot no ar
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-6">
                  {[
                    {
                      step: 1,
                      title: "Instalar Node.js",
                      description: "Baixe e instale o Node.js no seu computador",
                      action: "Acesse nodejs.org e baixe a vers√£o LTS"
                    },
                    {
                      step: 2,
                      title: "Criar pasta do projeto",
                      description: "Crie uma pasta para o seu chatbot",
                      action: "Exemplo: 'Chatbot-MinhaEmpresa' na √°rea de trabalho"
                    },
                    {
                      step: 3,
                      title: "Salvar o c√≥digo",
                      description: "Cole o c√≥digo baixado em um arquivo .js",
                      action: "Salve como 'bot.js' dentro da pasta criada"
                    },
                    {
                      step: 4,
                      title: "Instalar depend√™ncias",
                      description: "Abra o terminal na pasta e execute:",
                      action: "npm install whatsapp-web.js qrcode-terminal"
                    },
                    {
                      step: 5,
                      title: "Executar o bot",
                      description: "Execute o comando para iniciar:",
                      action: "node bot.js"
                    },
                    {
                      step: 6,
                      title: "Escanear QR Code",
                      description: "Use seu celular para escanear o QR Code",
                      action: "WhatsApp > Menu > Dispositivos vinculados"
                    }
                  ].map((item, index) => (
                    <div key={index} className="flex items-start space-x-4">
                      <div className="w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-500 text-white rounded-full flex items-center justify-center text-sm font-bold flex-shrink-0">
                        {item.step}
                      </div>
                      <div className="flex-1">
                        <h4 className="font-medium text-gray-700 mb-1">{item.title}</h4>
                        <p className="text-gray-600 text-sm mb-2">{item.description}</p>
                        <code className="bg-gray-100 px-2 py-1 rounded text-xs text-gray-700">
                          {item.action}
                        </code>
                      </div>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          {/* Support Tab */}
          <TabsContent value="support">
            <Card className="shadow-xl border-0">
              <CardHeader>
                <CardTitle className="flex items-center">
                  <MessageCircle className="w-5 h-5 mr-2 text-green-600" />
                  Suporte e Ajuda
                </CardTitle>
                <CardDescription>
                  Precisa de ajuda? Estamos aqui para voc√™!
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-6">
                <div className="text-center">
                  <div className="w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4">
                    <MessageCircle className="w-8 h-8 text-green-600" />
                  </div>
                  <h3 className="text-xl font-semibold mb-2">Atendimento Personalizado</h3>
                  <p className="text-gray-600 mb-6">
                    Nossa equipe especializada est√° pronta para te ajudar com a instala√ß√£o e configura√ß√£o do seu chatbot.
                  </p>
                  
                  <Button 
                    onClick={openWhatsApp}
                    className="bg-green-600 hover:bg-green-700 px-8 py-6 text-lg"
                    size="lg"
                  >
                    <MessageCircle className="w-5 h-5 mr-2" />
                    Falar com Suporte
                    <ExternalLink className="w-4 h-4 ml-2" />
                  </Button>
                </div>

                <Separator />

                <div className="grid md:grid-cols-2 gap-6">
                  <div className="space-y-3">
                    <h4 className="font-semibold text-gray-700">üöÄ O que oferecemos:</h4>
                    <ul className="space-y-2 text-sm text-gray-600">
                      <li>‚Ä¢ Suporte para instala√ß√£o completa</li>
                      <li>‚Ä¢ Configura√ß√£o personalizada</li>
                      <li>‚Ä¢ Teste e valida√ß√£o do funcionamento</li>
                      <li>‚Ä¢ Treinamento b√°sico de uso</li>
                      <li>‚Ä¢ Resolu√ß√£o de problemas t√©cnicos</li>
                    </ul>
                  </div>
                  
                  <div className="space-y-3">
                    <h4 className="font-semibold text-gray-700">‚è∞ Hor√°rio de atendimento:</h4>
                    <ul className="space-y-2 text-sm text-gray-600">
                      <li>‚Ä¢ Segunda a Sexta: 8h √†s 18h</li>
                      <li>‚Ä¢ S√°bado: 8h √†s 14h</li>
                      <li>‚Ä¢ Resposta em at√© 30 minutos</li>
                      <li>‚Ä¢ Suporte via WhatsApp</li>
                      <li>‚Ä¢ Atendimento em portugu√™s</li>
                    </ul>
                  </div>
                </div>

                <div className="bg-amber-50 border border-amber-200 rounded-xl p-4">
                  <h4 className="font-medium text-amber-800 mb-2">üí° Dicas importantes:</h4>
                  <ul className="text-sm text-amber-700 space-y-1">
                    <li>‚Ä¢ Mantenha o computador sempre ligado para o bot funcionar</li>
                    <li>‚Ä¢ Teste todas as funcionalidades ap√≥s a instala√ß√£o</li>
                    <li>‚Ä¢ Personalize as mensagens conforme sua necessidade</li>
                    <li>‚Ä¢ Entre em contato se tiver d√∫vidas ou problemas</li>
                  </ul>
                </div>
              </CardContent>
            </Card>
          </TabsContent>
        </Tabs>
      </div>
    </div>
  );
};

export default SetupInstructions;
